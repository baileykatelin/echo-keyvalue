KP: 3280: Using 16 for local hash table size (same as merge frequency), 1610000 for master hash table size
KP: 3280: Total memory allocation size (just evaluation, not kv stores themselves) could be up to 0 bytes (0 MB)
Will create 134166 random integers for each child thread
Now starting evaluation for key-value store: Masstree
On 16 cores
Running on storage platform: disk
Starting single-threaded tests

*** BEGINING SINGLE THREADED TESTS***

***NOW DOING LATENCY TEST ON INDIVIDUAL FUNCTIONS ***
For put-insert: 
	 time elapsed 0:17275 (sec:usec) = 17275 usecs 
	 iterations 10000 (merge every 8 -> 1250 merges)
	 average cost 1.727500 usecs
	 Conflicts: 0 (of 1249 commits)

For put-append: 
	 time elapsed 0:51956 (sec:usec) = 51956 usecs 
	 iterations 30000 (merge every 8 -> 3750 merges)
	 average cost 1.731867 usecs
	 Conflicts: 0 (of 3747 commits)

For get: 
	 time elapsed 0:21047 (sec:usec) = 21047 usecs 
	 iterations 30000 (merge every 8 -> 3750 merges)
	 average cost 0.701567 usecs
	 Conflicts: 0 (of 0 commits)

For delete: 
	 time elapsed 0:20645 (sec:usec) = 20645 usecs 
	 iterations 30000 (merge every 8 -> 3750 merges)
	 average cost 0.688167 usecs
	 Conflicts: 0 (of 3747 commits)


*** CONCLUDING SINGLE THREADED TESTS***

Starting multi-threaded tests: num_threads=12, NUM_CPUS=16
KP: 3280: pinned new thread to CPU=0x0
KP: 3280: pinned new thread to CPU=0x1
KP: 3280: pinned new thread to CPU=0x2
KP: 3280: pinned new thread to CPU=0x3
KP: 3280: pinned new thread to CPU=0x4
KP: 3280: pinned new thread to CPU=0x5
KP: 3280: pinned new thread to CPU=0x6
KP: 3280: pinned new thread to CPU=0x7
KP: 3280: pinned new thread to CPU=0x8
KP: 3280: pinned new thread to CPU=0x9
KP: 3280: pinned new thread to CPU=0xA
KP: 3280: pinned new thread to CPU=0xB
KP: 3280: sleeping to allow threads enough time
KP: 3280: waking up from sleep (0)
For multithreaded run ramp r:-1-w:30-u:70-d:1
	 1393175 total ops (1379283 puts + 0 gets + 13892 dels)
	 2000000 in runtime (usecs) = 2 secs = 0.696588 ops/usec
	 689641.500000 op/sec put throughput (all threads)
	 0.000000 op/sec get throughput (all threads)
	 6946.000000 op/sec del throughput (all threads)
	 696587.500000 op/sec total throughput (all threads)
	 Conflicts in worker thread: 0 (of 174153 commits)
	 Errors in worker thread: 0
	 Put errors: 0, Del errors: 0, Get errors: 0
***END OF RAMP-UP-THREADS OUTPUT***

KP: 3280: pinned new thread to CPU=0x0
KP: 3280: pinned new thread to CPU=0x1
KP: 3280: pinned new thread to CPU=0x0
KP: 3280: pinned new thread to CPU=0x1
KP: 3280: pinned new thread to CPU=0x2
KP: 3280: pinned new thread to CPU=0x0
KP: 3280: pinned new thread to CPU=0x1
KP: 3280: pinned new thread to CPU=0x2
KP: 3280: pinned new thread to CPU=0x3
KP: 3280: pinned new thread to CPU=0x0
KP: 3280: pinned new thread to CPU=0x1
KP: 3280: pinned new thread to CPU=0x2
KP: 3280: pinned new thread to CPU=0x3
KP: 3280: pinned new thread to CPU=0x4
KP: 3280: pinned new thread to CPU=0x0
KP: 3280: pinned new thread to CPU=0x1
KP: 3280: pinned new thread to CPU=0x2
KP: 3280: pinned new thread to CPU=0x3
KP: 3280: pinned new thread to CPU=0x4
KP: 3280: pinned new thread to CPU=0x5
KP: 3280: pinned new thread to CPU=0x6
KP: 3280: pinned new thread to CPU=0x7
KP: 3280: pinned new thread to CPU=0x8
KP: 3280: pinned new thread to CPU=0x9
KP: 3280: pinned new thread to CPU=0xA
KP: 3280: pinned new thread to CPU=0xB
KP: 3280: sleeping to allow threads enough time
KP: 3280: waking up from sleep (0)
For multithreaded run ramp r:99-w:0-u:0-d:1
	 6329890 total ops (0 puts + 6236561 gets + 63486 dels)
	 2000000 in runtime (usecs) = 2 secs = 3.164945 ops/usec
	 0.000000 op/sec put throughput (all threads)
	 3118280.500000 op/sec get throughput (all threads)
	 31743.000000 op/sec del throughput (all threads)
	 3164945.000000 op/sec total throughput (all threads)
	 Conflicts in worker thread: 0 (of 14610 commits)
	 Errors in worker thread: 0
	 Put errors: 0, Del errors: 0, Get errors: 0
***END OF RAMP-UP-THREADS OUTPUT***

***CONCLUDING THREAD EVALUATION***
